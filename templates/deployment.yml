apiVersion: apps/v1
kind: Deployment
metadata:
  name: netbox
spec:
  metadata:
  selector:
    matchLabels:
  template:
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.netbox.image.repository }}:{{ .Values.netbox.image.tag }}"
          imagePullPolicy: {{ .Values.netbox.image.pullPolicy | default "Always" }}
          env:
            - name: SUPERUSER_NAME
              value: {{ .Values.superuser.name | quote }}
            - name: SUPERUSER_EMAIL
              value: {{ .Values.superuser.email | quote }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /etc/netbox/config/configuration.py
              subPath: configuration.py
              readOnly: true
            - name: config
              mountPath: /run/config/netbox
              readOnly: true
            - name: secrets
              mountPath: /run/secrets/netbox
              readOnly: true
            - name: media
              mountPath: /opt/netbox/netbox/media
              subPath: {{ .Values.persistence.subPath | default "" | quote }}
            {{- if .Values.reportsPersistence.enabled }}
            - name: reports
              mountPath: /opt/netbox/netbox/reports
              subPath: {{ .Values.reportsPersistence.subPath | default "" | quote }}
            {{- end }}
            - name: static
              mountPath: /opt/netbox/netbox/static
        - name: nginx
          image: "{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}"
          imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
            - name: config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
            - name: static
              mountPath: /opt/netbox/netbox/static
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: netbox
        - name: secrets
          secret:
            secretName: netbox
        - name: media
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName:  {{ .Values.persistence.existingClaim | default (printf "netbox-media")}}
        {{- else }}
          emptyDir: {}
        {{- end }}
        {{- if .Values.persistence.enabled }}
        - name: reports
          persistentVolumeClaim:
            claimName:  {{ .Values.persistence.existingClaim | default (printf "netbox-reports")}}
        {{- end }}
        - name: static
          emptyDir: {}